pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: jenkins-kaniko
spec:
  serviceAccountName: jenkins-sa
  containers:
    - name: aws
      image: amazon/aws-cli
      command: ["sleep"]
      args: ["99d"]
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.16.0-debug
      command: ["sleep"]
      args: ["99d"]
"""
    }
  }

  environment {
    ECR_REGISTRY = "804054839611.dkr.ecr.eu-central-1.amazonaws.com"
    IMAGE_NAME   = "lesson-5-ecr-nat"
    IMAGE_TAG    = "latest"
  }

  stages {
    stage('Login to AWS ECR') {
      steps {
        container('aws') {
          withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
            sh '''
              aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
            '''
          }
        }
      }
    }

    stage('Build & Push Docker Image') {
      steps {
        container('kaniko') {
          sh '''
            /kaniko/executor \
              --context `pwd`/dj_project \
              --dockerfile `pwd`/dj_project/Dockerfile \
              --destination=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
              --cache=true \
              --insecure \
              --skip-tls-verify
          '''
        }
      }
    }
  }
}
